//var socket = io.connect('http://coms-319-099.cs.iastate.edu:8080/');
var socket = io.connect('localhost:8080/');

var switchBtn = document.getElementById("switch");
var updateBtn1 = document.getElementById("updateP1");
var player1chara = document.getElementById("p1Char");
var player1alt = document.getElementById("p1Alt");
var player1score = document.getElementById("p1Score");
var player2chara = document.getElementById("p2Char");
var player2alt = document.getElementById("p2Alt");
var player2score = document.getElementById("p2Score");

var modCheckBoolean=false;

var titleBtn = document.getElementById("updateTitle");

socket.on('connect', function(data)
{
	//timeUpdater();
	socket.emit('join', 'Hello World from client');
});

socket.on('returnCheck1', function(result)
{
	modCheckBoolean=result;

	if(player1chara.value=="miifighter" || player1chara.value=="miiswordsman" || player1chara.value=="miigunner")
	{
		if(modCheckBoolean)
		{
			document.getElementById("p1Preview").src="./mods/chara_2_"+player1chara.value+"_00.png";
		}
		else
		{
			document.getElementById("p1Preview").src="./node_modules/Stocks/chara_2_"+player1chara.value+"_00.png";
		}
	}
	else
	{
		if(modCheckBoolean)
		{
			document.getElementById("p1Preview").src="./mods/chara_2_"+player1chara.value+"_0"+player1alt.value+".png";
		}
		else
		{
			document.getElementById("p1Preview").src="./node_modules/Stocks/chara_2_"+player1chara.value+"_0"+player1alt.value+".png";
		}
	}

	modCheckBoolean=false;
});

socket.on('returnCheck2', function(result)
{
	modCheckBoolean=result;

	if(player2chara.value=="miifighter" || player2chara.value=="miiswordsman" || player2chara.value=="miigunner")
	{
		if(modCheckBoolean)
		{
			document.getElementById("p2Preview").src="./mods/chara_2_"+player2chara.value+"_00.png";
		}
		else
		{
			document.getElementById("p2Preview").src="./node_modules/Stocks/chara_2_"+player2chara.value+"_00.png";
		}
	}
	else
	{
		if(modCheckBoolean)
		{
			document.getElementById("p2Preview").src="./mods/chara_2_"+player2chara.value+"_0"+player2alt.value+".png";
		}
		else
		{
			document.getElementById("p2Preview").src="./node_modules/Stocks/chara_2_"+player2chara.value+"_0"+player2alt.value+".png";
		}
	}

	modCheckBoolean=false;
});

socket.on('loadSavedData', function(val, loc)
{
	document.getElementById(loc).value=val;
});

$('#switch').click(function(s,err)
{
	if(err)
	{
		console.log(err);
	}
	else
	{
		s.preventDefault();

		var tempChar = document.getElementById("p1Char").value;
		document.getElementById("p1Char").value=document.getElementById("p2Char").value;
		document.getElementById("p2Char").value = tempChar;

		var tempAlt = document.getElementById("p1Alt").value;
		document.getElementById("p1Alt").value=document.getElementById("p2Alt").value;
		document.getElementById("p2Alt").value = tempAlt;

		var tempScore = document.getElementById("p1Score").value;
		document.getElementById("p1Score").value=document.getElementById("p2Score").value;
		document.getElementById("p2Score").value = tempScore;

		var tempName = document.getElementById("p1Name").value;
		document.getElementById("p1Name").value=document.getElementById("p2Name").value;
		document.getElementById("p2Name").value = tempName;

		socket.emit('checkPath',"./mods/chara_2_"+player1chara.value+"_0"+player1alt.value+".png",'1');
		socket.emit('checkPath',"./mods/chara_2_"+player1chara.value+"_0"+player1alt.value+".png",'2');

	}
});

$('#updateP1').click(function(s,err)
{
	if(err)
	{
		console.log(err);
	}
	else
	{
		s.preventDefault();
		socket.emit('stock_update',document.getElementById("p1Char").value,document.getElementById("p1Alt").value,"1");
		var stock = document.getElementById("p1Current");
		stock.src="./updateables/stock1.png?t="+ new Date().getTime();
	}
});

$('#updateP1all').click(function(s,err)
{
	if(err)
	{
		console.log(err);
	}
	else
	{
		s.preventDefault();

		socket.emit('text_update',document.getElementById("p1Name").value,"name1");

		socket.emit('stock_update',document.getElementById("p1Char").value,document.getElementById("p1Alt").value,"1");
		var stock = document.getElementById("p1Current");
		stock.src="./updateables/stock1.png?t="+ new Date().getTime();

		if(document.getElementById("friendlies").checked)
		{
		}
		else
		{
			socket.emit('text_update',document.getElementById("p1Score").value,"score1");
		}
	}
});

$('#updateP2').click(function(r)
{
	r.preventDefault();
	socket.emit('stock_update',document.getElementById("p2Char").value,document.getElementById("p2Alt").value,"2");
	var stock = document.getElementById("p2Current");
	stock.src="./updateables/stock2.png?t="+ new Date().getTime();
});

$('#updateP2all').click(function(s,err)
{
	if(err)
	{
		console.log(err);
	}
	else
	{
		s.preventDefault();

		socket.emit('text_update',document.getElementById("p2Name").value,"name2");

		socket.emit('stock_update',document.getElementById("p2Char").value,document.getElementById("p2Alt").value,"2");
		var stock = document.getElementById("p2Current");
		stock.src="./updateables/stock2.png?t="+ new Date().getTime();

		if(document.getElementById("friendlies").checked)
		{
		}
		else
		{
			socket.emit('text_update',document.getElementById("p2Score").value,"score2");
		}
	}
});

$('#updateTitle').click(function(t)
{
	t.preventDefault();
	socket.emit('text_update',document.getElementById("titleName").value,"title");
});

$('#updateP1Score').click(function(sp1)
{
	sp1.preventDefault();

	if(document.getElementById("friendlies").checked)
	{
		//socket.emit('text_update',"X","score1");
		//socket.emit('text_update',"X","score2");
	}
	else
	{
		socket.emit('text_update',document.getElementById("p1Score").value,"score1");
	}
});

$('#updateP2Score').click(function(sp1)
{
	sp1.preventDefault();

	if(document.getElementById("friendlies").checked)
	{
		//socket.emit('text_update',"X","score1");
		//socket.emit('text_update',"X","score2");
	}
	else
	{
		socket.emit('text_update',document.getElementById("p2Score").value,"score2");
	}
});

$('#updateP1Name').click(function(np1)
{
	np1.preventDefault();
	socket.emit('text_update',document.getElementById("p1Name").value,"name1");
});

$('#updateP2Name').click(function(np2)
{
	np2.preventDefault();
	socket.emit('text_update',document.getElementById("p2Name").value,"name2");
});

$('#updateInfo1').click(function(np1)
{
	np1.preventDefault();
	socket.emit('text_update',document.getElementById("info1").value,"info1");
});

$('#updateInfo2').click(function(np2)
{
	np2.preventDefault();
	socket.emit('text_update',document.getElementById("info2").value,"info2");
});

$('#p1Char').change(function(pc1)//player1chara.onchange = function()
{
	pc1.preventDefault();
	socket.emit('checkPath',"./mods/chara_2_"+player1chara.value+"_0"+player1alt.value+".png",'1');
});

$('#p1Alt').change(function(ac1)//player1chara.onchange = function()
{
	ac1.preventDefault();
	socket.emit('checkPath',"./mods/chara_2_"+player1chara.value+"_0"+player1alt.value+".png",'1');
});

$('#p2Char').change(function(pc2)
{
	pc2.preventDefault();
	socket.emit('checkPath',"./mods/chara_2_"+player2chara.value+"_0"+player2alt.value+".png",'2');
});

$('#p2Alt').change(function(pc2)
{
	pc2.preventDefault();
	socket.emit('checkPath',"./mods/chara_2_"+player2chara.value+"_0"+player2alt.value+".png",'2');
});

$('#friendlies').change(function(pc2)
{
	pc2.preventDefault();

	if(document.getElementById("friendlies").checked)
	{
		socket.emit('text_update',"X","score1");
		socket.emit('text_update',"X","score2");
	}
	else
	{
		socket.emit('text_update',document.getElementById("p1Score").value,"score1");
		socket.emit('text_update',document.getElementById("p2Score").value,"score2");
	}
});

var timer;
setTimeout(timer);
timer = setInterval(function()
{
	//Noon = 12P.M.
	var time=new Date();

	var seconds=time.getSeconds();
	var minutes=time.getMinutes();
	var hours=time.getHours();

	if(seconds<10)
	{
		seconds="0"+seconds;
	}
	if(minutes<10)
	{
		minutes="0"+minutes;
	}
	if(hours<10)
	{
		hours="0"+hours;
	}

	var timeWay=document.getElementById("timeSet").value;

	var currentTime;
	if(timeWay==1)//24hour clock
	{
		currentTime=hours+":"+minutes+":"+seconds;
	}
	else if(timeWay==2)
	{
		var amp;
		if(hours<12)
			amp="A.M.";
		else
			amp="P.M.";

		hours=hours%12;

		if(hours==0)
		{
			hours=12;
		}
		if(hours<10)
		{
			hours="0"+hours;
		}

		currentTime=hours+":"+minutes+":"+seconds+" "+amp;
	}
	document.getElementById("timeHolder").innerHTML="Current Time: "+currentTime;
	socket.emit('text_update',currentTime,"time");
},200);












